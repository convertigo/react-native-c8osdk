/**
 * Flowtype definitions for c8oLogg
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.2.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare var C8oR: ;
declare var undefined: ;
/**
 * Allow you to make a log both locally and remotlly on Convertigo server, logs can be paramettered from C8oSettings class
 */
declare export class C8oLogger {
    constructor(): this;

    /**
     * Log level fatal
     * Allow you to make a log both locally and remotlly on Convertigo server, logs can be paramettered from C8oSettings class
     * @param  The message to log
     * @returns  Promise<any>
     */
    fatal(message: string): Promise<any>;

    /**
     * Log level error
     * Allow you to make a log both locally and remotlly on Convertigo server, logs can be paramettered from C8oSettings class
     * @param  The message to log
     * @returns  Promise<any>
     */
    error(message: string): Promise<any>;

    /**
     * Log level warn
     * Allow you to make a log both locally and remotlly on Convertigo server, logs can be paramettered from C8oSettings class
     * @param  The message to log
     * @returns  Promise<any>
     */
    warn(message: string): Promise<any>;

    /**
     * Log level info
     * Allow you to make a log both locally and remotlly on Convertigo server, logs can be paramettered from C8oSettings class
     * @param  The message to log
     * @returns  Promise<any>
     */
    info(message: string): Promise<any>;

    /**
     * Log level debug
     * Allow you to make a log both locally and remotlly on Convertigo server, logs can be paramettered from C8oSettings class
     * @param  The message to log
     * @returns  Promise<any>
     */
    debug(message: string): Promise<any>;

    /**
     * Log level debug
     * Allow you to make a log both locally and remotlly on Convertigo server, logs can be paramettered from C8oSettings class
     * @param  The message to log
     * @returns  Promise<any>
     */
    trace(message: string): Promise<any >
}